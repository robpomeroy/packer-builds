{
    "variables": {
        "vm_name": "ubuntu-20_04",
        "domain": "local",
        "ssh_username": "ansible",
        "ssh_password": "changeThisPassword",
        "cpus": "2",
        "memory": "2048",
        "disk_size": "40960",
        "switch_name": "NAT-Switch",
        "iso_url": "file://C:/path/to/ISOs/ubuntu-20.04.1-live-server-amd64.iso",
        "iso_checksum": "sha1:1c82f74495c4d9257c973fd031bc5ebde3d5b9a7",
        "output_directory": "T:/packer-builds/ubuntu-20.04"
    },

    "builders": [
        {
            "boot_command": [
              "<esc><esc><esc>",
              "set gfxpayload=keep<enter>",
              "linux /casper/vmlinuz ",
              "\"ds=nocloud-net;s=http://{{ .HTTPIP }}:{{ .HTTPPort }}/\" ",
              "quiet autoinstall ---<enter>",
              "initrd /casper/initrd<enter>",
              "boot<enter>"
            ],
            "boot_wait": "3s",

            "vm_name": "{{user `vm_name`}}",
            "type": "hyperv-iso",
            "iso_url": "{{user `iso_url`}}",
            "iso_checksum": "{{user `iso_checksum`}}",
            "ssh_username": "{{user `ssh_username`}}",
            "ssh_password": "{{user `ssh_password`}}",
            "ssh_timeout": "30m",
            "ssh_handshake_attempts": "20",
            "communicator": "ssh",
        
            "switch_name": "{{user `switch_name`}}",
        
            "disk_block_size": 32,
            "disk_size": "{{user `disk_size`}}",
            "memory": "{{user `memory`}}",
            "enable_dynamic_memory": true,
            "cpus": "{{user `cpus`}}",
        
            "headless": false,
            "generation": 2,
            "enable_secure_boot": true,
            "secure_boot_template": "MicrosoftUEFICertificateAuthority",
            "first_boot_device": "SCSI:0:1",

            "http_directory": "http",
        
            "shutdown_command": "echo '{{user `ssh_username`}}' | sudo -S shutdown -P now",
            "output_directory": "{{user `output_directory`}}"
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "execute_command": "echo '{{user `ssh_username`}}' | {{.Vars}} sudo -S -E bash '{{.Path}}'",
            "scripts": ["scripts/clean_up.sh"]
        }        
    ]
}